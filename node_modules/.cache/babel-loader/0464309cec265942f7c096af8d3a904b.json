{"ast":null,"code":"import _slicedToArray from \"/Users/kkanpari/Repo/My-Dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/kkanpari/Repo/My-Dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kkanpari/Repo/My-Dashboard/src/App.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Home from './home.component';\nimport Dashboard from './dashboard.component';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { MenuItem } from '@material-ui/core';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: '20px',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 300\n  },\n  homeCompo: {\n    padding: '10px',\n    fontSize: '20px'\n  },\n  greenRect: {\n    backgroundColor: '#1F5533',\n    width: '100px',\n    height: '30px',\n    flex: 1,\n    margin: '0 5px'\n  },\n  redRect: {\n    backgroundColor: '#FF1145',\n    width: '50%',\n    height: '30px'\n  },\n  spanPad: {\n    textAlign: 'center',\n    color: 'white',\n    padding: '3px 0px',\n    margin: '0 5px'\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, open && classes.appBarShift),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    onClick: handleDrawerOpen,\n    className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Menu\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Home\")), React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Dashboard\"))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/home\",\n    component: () => React.createElement(Home, {\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dashboard\",\n    component: () => React.createElement(Dashboard, {\n      classes: classes,\n      fixedHeightPaper: fixedHeightPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/kkanpari/Repo/My-Dashboard/src/App.js"],"names":["React","clsx","makeStyles","CssBaseline","Drawer","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","Home","Dashboard","BrowserRouter","Router","Route","Link","MenuItem","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","fontSize","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","homeCompo","greenRect","backgroundColor","flex","margin","redRect","spanPad","textAlign","color","App","classes","useState","open","setOpen","handleDrawerOpen","fixedHeightPaper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Home from './home.component';\nimport Dashboard from './dashboard.component';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n\n} from \"react-router-dom\";import { MenuItem } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: '20px',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 300,\n  },\n\n  homeCompo:{\n    padding: '10px',\n    fontSize: '20px',\n  },\n\n  greenRect:{\n    backgroundColor:'#1F5533',\n    width:'100px',\n    height:'30px',\n    flex: 1,\n    margin:'0 5px',\n  },\n  redRect:{\n    backgroundColor:'#FF1145',\n    width:'50%',\n    height:'30px',\n  },\n\n  spanPad:{\n    textAlign:'center',\n    color:'white',\n    padding:'3px 0px',\n    margin:'0 5px'\n  }\n\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          > \n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} />\n        </Toolbar>\n      </AppBar>\n      <Router>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>Menu</div>\n        <Divider />\n        \n         <MenuItem ><Link to=\"/home\">Home</Link></MenuItem>\n         <MenuItem ><Link to=\"/dashboard\">Dashboard</Link></MenuItem>\n \n      </Drawer>\n      <main className={classes.content}>\n        <Route path=\"/home\" component={ () => <Home classes={classes}/>} />\n        <Route path=\"/dashboard\" component={()=><Dashboard classes={classes} fixedHeightPaper={fixedHeightPaper} /> }/>\n      </main>\n      </Router>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}